{"version":3,"sources":["redux/reducers/authReducer.js","redux/actions/actionTypes.js","redux/reducers/postsReducer.js","redux/RootReducer.js","redux/store.js","redux/actions/postsActions.js","pages/Home.jsx","pages/Login.jsx","redux/actions/authActions.js","components/Navbar.jsx","pages/Register.jsx","pages/Profile.jsx","pages/OtherUser.jsx","App.js","serviceWorker.js","index.js","assets/icons/trash.svg"],"names":["initialState","token","isAuthenticated","user","authReducer","state","action","type","Cookies","set","remove","posts","postsReducer","concat","newPost","map","post","id","editedPost","filter","toDeletePost","RootReducer","combineReducers","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","next","console","log","result","getState","editingPost","destroyPost","Home","useSelector","useState","msg","setMsg","msgEdit","setMsgEdit","edit","setEdit","dispatch","useDispatch","useEffect","length","fetch","then","response","ok","Error","statusText","json","loadPosts","Title","Typography","Header","Layout","Content","className","style","padding","textAlign","margin","minHeight","username","onSubmit","e","preventDefault","addPost","text","method","headers","body","JSON","stringify","catch","error","alert","placeholder","onChange","target","value","sort","a","b","Date","created_at","key","src","Trash","alt","onClick","confirm","height","to","data","like","incrementLike","onFocus","autoFocus","editPost","Login","email","setEmail","password","setPassword","history","useHistory","push","identifier","jwt","loginSuccess","required","Navbar","logout","Sider","breakpoint","collapsedWidth","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","Register","name","setName","registerSuccess","Profile","forEach","Math","floor","random","i","Faker","hacker","phrase","OtherUser","setUser","userPosts","setUserPosts","userId","useParams","description","App","get","loadUser","UnAuthRoute","Component","component","rest","render","props","pathname","AuthRoute","Footer","basename","process","path","exact","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.1adf530f.chunk.js","sourcesContent":["import {\n  LOAD_USER,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from '../actions/actionTypes';\n\nimport Cookies from 'js-cookie'\n\nconst initialState = {\n  token: null,\n  isAuthenticated: null,\n  user: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_USER:\n      return {\n        ...state,\n        token: action.token,\n        isAuthenticated: true,\n        user: action.user,\n      }\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      Cookies.set('token', action.token)\n      return {\n        ...state,\n        ...action.token,\n        token: action.token,\n        isAuthenticated: true,\n        user: action.user,\n      }\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      Cookies.remove('token')\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default authReducer","export const LOAD_USER = \"LOAD_USER\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\n\nexport const LOAD_POSTS = \"LOAD_POST\";\nexport const NEW_POST = \"NEW_POST\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n","import { NEW_POST, LOAD_POSTS, DELETE_POST, EDIT_POST } from '../actions/actionTypes';\n\nconst initialState = {\n  posts: [],\n}\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return {\n        ...state,\n        posts: state.posts.concat(action.posts)\n      }\n    case NEW_POST:\n      return {\n        ...state,\n        posts: state.posts.concat(action.newPost)\n      }\n    case EDIT_POST:\n      return {\n        ...state,\n        posts: state.posts.map((post) => post.id === action.editedPost.id ? action.editedPost : post)\n      }\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post.id !== action.toDeletePost.id)\n      }\n    default:\n      return state\n  }\n}\n\nexport default postsReducer","\nimport { combineReducers } from 'redux';\nimport authReducer from './reducers/authReducer';\nimport postsReducer from './reducers/postsReducer';\n\nconst RootReducer = combineReducers({\n  auth: authReducer,\n  posts: postsReducer\n});\n\nexport default RootReducer","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./RootReducer\"\n\nconst logger = (store) => {\n    return (next) => {\n        return (action) => {\n            console.log(\"[Middleware] Dispatching\", action)\n            const result = next(action)\n            console.log(\"[Middleware] next state\", store.getState())\n            return result\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(logger))\n)\n\n\nexport default store","import * as actionTypes from './actionTypes';\n\nexport const loadPosts = (posts) => {\n    return {\n        type: actionTypes.LOAD_POSTS,\n        posts: posts\n    }\n}\n\nexport const newPost = (post) => {\n    return {\n        type: actionTypes.NEW_POST,\n        newPost: post\n    }\n}\n\nexport const editingPost = (post) => {\n    return {\n        type: actionTypes.EDIT_POST,\n        editedPost: post\n    }\n}\n\nexport const destroyPost = (post) => {\n    return {\n        type: actionTypes.DELETE_POST,\n        toDeletePost: post\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Layout, Divider } from 'antd';\nimport { Typography } from 'antd';\n\nimport { loadPosts, newPost, destroyPost, editingPost } from '../redux/actions/postsActions'\n\nimport Trash from '../assets/icons/trash.svg'\n\n\nconst Home = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const user = useSelector(state => state.auth.user);\n  const token = useSelector(state => state.auth.token);\n  const posts = useSelector(state => state.posts.posts);\n\n  const [msg, setMsg] = useState(\"\")\n  const [msgEdit, setMsgEdit] = useState(\"\")\n  const [edit, setEdit] = useState(\"\")\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const getPosts = () => {\n      fetch(\"https://api-minireseausocial.mathis-dyk.fr/posts\")\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(loadPosts(response))\n        })\n    }\n    if (posts.length === 0) {\n      getPosts()\n    }\n  }, [posts, dispatch])\n\n  const addPost = (e) => {\n    e.preventDefault()\n    const addPost = {\n      text: msg,\n      user: user.id\n    }\n    fetch(\"https://api-minireseausocial.mathis-dyk.fr/posts\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(addPost)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(newPost(response))\n        setMsg('')\n      })\n      .catch((error) => {\n        alert(error)\n      })\n  }\n\n  const editPost = (post) => {\n    const data = {\n      text: msgEdit\n    }\n    fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(editingPost(response))\n        setEdit(\"\")\n      })\n      .catch((error) => {\n        alert(error)\n      })\n  }\n\n  const deletePost = (toDeletePost) => {\n    if (window.confirm(\"Le message va être supprimé\")) {\n      fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${toDeletePost.id}`, {\n        method: 'delete',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(destroyPost(response))\n        })\n        .catch((error) => {\n          alert(error)\n        })\n    }\n  }\n\n  const incrementLike = (post) => {\n    const data = {\n      like: post.like + 1\n    }\n    fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(editingPost(response))\n        setEdit(\"\")\n      })\n      .catch((error) => {\n        alert(error)\n      })\n  }\n\n  const { Title } = Typography;\n  const { Header, Content } = Layout;\n\n  return (\n    <>\n      <Header className=\"site-layout-sub-header-background\" style={{ padding: 0, textAlign: \"center\" }}>\n        <Title>Welcome on My Social Network.</Title>\n      </Header>\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n          {isAuthenticated &&\n            <>\n              <h2>Hello {user.username}, what do you want to share with us today ?</h2>\n              <div className=\"form-box\">\n                <form onSubmit={addPost} className=\"msg-box\">\n                  <textarea type=\"text\" placeholder=\"Your shitty message...\" onChange={(e) => setMsg(e.target.value)} value={msg} />\n                  <input type=\"submit\" className=\"btn-submit\" />\n                </form>\n              </div>\n              <Divider>News feed</Divider>\n            </>\n          }\n          <div>\n            <ul>\n              {posts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => {\n                if (!post.text || !post.user) {\n                  return false\n                }\n                return (\n\n                  <li key={post.id}>\n                    {isAuthenticated && post.user.id === user.id && edit !== post.id &&\n                      <>\n                        <img src={Trash} alt=\"delete post\" onClick={() => deletePost(post)} style={{ height: \"1em\" }} />\n                        <button onClick={() => setEdit(post.id)}>Edit</button>\n                      </>\n                    }\n                    {isAuthenticated &&\n                      <Link to={`/user/${post.user.id}`}>\n                        <b>{post.user.username} : </b>\n                      </Link>\n                    }\n                    {edit !== post.id &&\n                      <>\n                        {post.text}\n                      </>\n                    }\n                    {isAuthenticated && edit !== post.id &&\n                      <span onClick={() => incrementLike(post)}> <b>|</b> {`❤ ${!post.like ? 0 : post.like}`} <b>|</b></span>\n                    }\n                    {edit === post.id &&\n                      <>\n                        <input value={msgEdit} onFocus={() => setMsgEdit(post.text)} autoFocus onChange={(e) => setMsgEdit(e.target.value)} />\n                        <button onClick={() => editPost(post)}>edit post</button>\n                        <button onClick={() => setEdit(\"\")}>cancel</button>\n                      </>\n                    }\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </Content>\n    </>\n  )\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Layout } from 'antd';\nimport { Typography } from 'antd';\n\nimport { loginSuccess, loginFail } from '../redux/actions/authActions'\n\nconst Login = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(\"/\");\n    }\n  }, [isAuthenticated, history])\n\n  const login = (e) => {\n    e.preventDefault()\n    const data = {\n      identifier: email,\n      password: password\n    }\n\n    fetch(\"https://api-minireseausocial.mathis-dyk.fr/auth/local/\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(loginSuccess(response))\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        dispatch(loginFail())\n        alert(\"Mauvais email ou mot de passe\")\n      })\n  }\n\n  const { Header, Content } = Layout;\n  const { Title } = Typography;\n\n  return (\n    <>\n      <Header className=\"site-layout-sub-header-background\" style={{ padding: 0, textAlign: \"center\" }}>\n        <Title>Login</Title>\n      </Header>\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360, height: \"100%\" }}>\n          <div className=\"form-box\">\n            <form onSubmit={login}>\n              <input type=\"text\" placeholder=\"Your Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n              <input type=\"password\" placeholder=\"Your unforgettable password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n              <input type=\"submit\" className=\"btn-submit\" />\n            </form>\n          </div>\n        </div>\n      </Content>\n    </>\n  )\n}\n\nexport default Login;\n","import * as actionTypes from './actionTypes';\nimport Cookies from 'js-cookie'\n\nexport const registerSuccess = (response) => {\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        token: response.jwt,\n        user: response.user,\n    }\n}\n\nexport const registerFail = () => {\n    return {\n        type: actionTypes.REGISTER_FAIL,\n    }\n}\n\nexport const loadUser = (response) => {\n    return {\n        type: actionTypes.LOAD_USER,\n        user: response,\n        token: Cookies.get('token')\n    }\n}\n\nexport const loginSuccess = (response) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        token: response.jwt,\n        user: response.user,\n    }\n}\n\nexport const loginFail = () => {\n    return {\n        type: actionTypes.LOGIN_FAIL,\n    }\n}\n\nexport const logoutSuccess = () => {\n    return {\n        type: actionTypes.LOGOUT_SUCCESS,\n    }\n}","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Layout, Menu } from 'antd';\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons';\n\nimport { logoutSuccess } from '../redux/actions/authActions'\n\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const logout = () => {\n    dispatch(logoutSuccess())\n    history.push(\"/\");\n  }\n\n  const { Sider } = Layout;\n\n  const displayMenu = () => {\n    if (isAuthenticated) {\n      return (\n        <>\n          <Sider\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n          >\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                <Link to=\"/\"> Home </Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\" icon={<UserOutlined />}>\n                <Link to=\"/profile\"> Profile </Link>\n              </Menu.Item>\n              <Menu.Item key=\"5\">\n                <p onClick={logout}>Se déconnecter</p>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <Sider\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n          >\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\" icon={<UserOutlined />}>\n\n                <Link to=\"/\"> Home </Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                <Link to=\"/login\"> Login </Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n                <Link to=\"/register\"> Register </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n        </>\n      )\n    }\n  }\n\n  return displayMenu();\n};\n\nexport default Navbar;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Layout } from 'antd';\nimport { Typography } from 'antd';\n\nimport { registerSuccess, registerFail } from '../redux/actions/authActions'\n\nconst Register = () => {\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  const history = useHistory();\n\n  const newRegister = (e) => {\n    e.preventDefault()\n    const data = {\n      username: name,\n      email: email,\n      password: password\n    }\n\n    fetch(\"https://api-minireseausocial.mathis-dyk.fr/auth/local/register\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(registerSuccess(response))\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        dispatch(registerFail())\n        alert(error)\n      })\n  }\n\n  const { Header, Content } = Layout;\n  const { Title } = Typography;\n\n\n  return (\n    <>\n      <Header className=\"site-layout-sub-header-background\" style={{ padding: 0, textAlign: \"center\" }}>\n        <Title>Register</Title>\n      </Header>\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360, height: \"100%\" }}>\n          <div className=\"form-box\">\n\n            <form onSubmit={newRegister}>\n              <input type=\"text\" placeholder=\"Your fancy username\" value={name} onChange={(e) => setName(e.target.value)} required />\n              <input type=\"text\" placeholder=\"Your email (for spamming you a lot of course)\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n              <input type=\"password\" placeholder=\"Password (as weak as possible, our security is shitty as fuck anyway)\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n              <input type=\"submit\" className=\"btn-submit\" />\n            </form>\n          </div>\n        </div>\n      </Content>\n    </>\n  )\n}\n\nexport default Register;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { newPost, editingPost, destroyPost } from '../redux/actions/postsActions'\n\nimport { Layout, Divider } from 'antd';\nimport { Typography } from 'antd';\n\nimport Faker from 'faker'\n\nconst Profile = () => {\n  const user = useSelector(state => state.auth.user);\n  const token = useSelector(state => state.auth.token);\n  const posts = useSelector(state => state.posts.posts);\n  const { id, username } = user\n\n  const dispatch = useDispatch()\n\n  const likeForAll = () => {\n    posts.forEach(post => {\n      if (!post.like) {\n        const data = {\n          like: Math.floor(Math.random() * Math.floor(1000))\n        }\n        fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(data)\n        })\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response\n          })\n          .then((response) => response.json())\n          .then((response) => {\n            console.log(response)\n          })\n          .catch((error) => {\n            alert(error)\n          })\n      }\n    });\n  }\n\n  const randomPosts = (e) => {\n    e.preventDefault()\n    for (let i = 0; i < 25; i++) {\n      const addPost = {\n        text: Faker.hacker.phrase(),\n        user: i,\n      }\n      fetch(\"https://api-minireseausocial.mathis-dyk.fr/posts\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(addPost)\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(newPost(response))\n        })\n        .catch(console.log)\n    }\n  }\n\n  const deleteAll = () => {\n    if (window.confirm(\"Êtes-vous sûr de vouloir tout supprimer ?\")) {\n      posts.forEach(post => {\n        fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n          method: 'delete',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n        })\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response\n          })\n          .then((response) => response.json())\n          .then((response) => {\n            console.log(response)\n            dispatch(destroyPost(response))\n          })\n          .catch(console.log)\n      });\n    }\n  }\n\n  const iAmTheBoss = () => {\n    const data = {\n      text: `${username} c'est vraiment le boss !`\n    }\n    posts.forEach(post => {\n      fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(data)\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(editingPost(response))\n        })\n        .catch(console.log);\n    })\n  }\n\n  const { Header, Content } = Layout;\n  const { Title } = Typography;\n\n  return (\n    <>\n      <Header className=\"site-layout-sub-header-background\" style={{ padding: 0, textAlign: \"center\" }}>\n        <Title>Welcome on your profile.</Title>\n      </Header>\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360, height: \"100%\" }}>\n          <p>id : {id}</p>\n          <p>name : {username}</p>\n          <Divider>Un grand pouvoir implique de grandes responsabilités</Divider>\n          <button onClick={likeForAll}>like for all</button>\n          <button onClick={randomPosts}>generate random posts</button>\n          <button onClick={deleteAll}>delete all posts</button>\n          <button onClick={iAmTheBoss}>petit plaisir</button>\n        </div>\n      </Content>\n    </>\n  )\n}\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\n\nimport { Layout } from 'antd';\nimport { Typography } from 'antd';\n\nconst OtherUser = () => {\n    const token = useSelector(state => state.auth.token);\n    const [user, setUser] = useState({})\n    const [userPosts, setUserPosts] = useState([])\n\n    let { userId } = useParams()\n\n    useEffect(() => {\n        const fetchUser = () => {\n            fetch(`https://api-minireseausocial.mathis-dyk.fr/users/${userId}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n                .then((response) => {\n                    if (!response.ok) {\n                        throw Error(response.statusText);\n                    }\n                    return response\n                })\n                .then((response) => response.json())\n                .then((response) => {\n                    setUser(response)\n                })\n                .catch((error) => {\n                    alert(error)\n                })\n        }\n        const fetchUserPosts = () => {\n            fetch(`https://api-minireseausocial.mathis-dyk.fr/posts?user.id=${userId}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n                .then((response) => {\n                    if (!response.ok) {\n                        throw Error(response.statusText);\n                    }\n                    return response\n                })\n                .then((response) => response.json())\n                .then((response) => {\n                    setUserPosts(response)\n                })\n                .catch((error) => {\n                    alert(error)\n                })\n        }\n        fetchUser()\n        fetchUserPosts()\n    }, [token, userId])\n\n    const { Header, Content } = Layout;\n\n    const { Title } = Typography;\n\n\n    return (\n        <>\n            <Header className=\"site-layout-sub-header-background\" style={{ padding: 0, textAlign: \"center\" }}>\n                <Title>Welcome on {user.username}'s profile.</Title>\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }}>\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360, height: \"100%\" }}>\n                    <div>\n                        <p>id : {user.id}</p>\n                        <p>name : {user.username}</p>\n                        <p>description : {user.description}</p>\n                    </div>\n                    <h2>Les messages postés par {user.username}</h2>\n                    <ul>\n                        {userPosts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => {\n                            if (!post.text || !post.user) {\n                                return false\n                            }\n                            return (\n                                <li key={post.id}>\n\n                                    <b>{post.user.username} : </b>\n\n                                    {post.text}\n                                    <span onClick={() => console.log(\"like\")}> <b>|</b> {`❤ ${!post.like ? 0 : post.like}`} <b>|</b></span>\n                                </li>)\n                        })}\n                    </ul>\n                </div>\n            </Content>\n        </>)\n}\n\nexport default OtherUser","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Cookies from 'js-cookie'\nimport { Layout } from 'antd';\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Navbar from './components/Navbar';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport OtherUser from './pages/OtherUser';\nimport \"./App.css\"\n\nimport { loadUser } from './redux/actions/authActions'\n\nconst App = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (Cookies.get('token')) {\n      fetch(\"https://api-minireseausocial.mathis-dyk.fr/users/me\", {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('token')}`\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(loadUser(response))\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n  }, [dispatch])\n\n  const UnAuthRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n      isAuthenticated ? (\n        <Redirect to={{ pathname: '/' }} />\n      ) : (\n          <Component {...props} />\n        )\n    )} />\n  )\n\n  const AuthRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n          <Redirect to={{ pathname: '/login' }} />\n        )\n    )} />\n  )\n\n  const { Footer } = Layout;\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Layout>\n          <Switch>\n            <UnAuthRoute path=\"/login\" component={Login} />\n            <UnAuthRoute path=\"/register\" component={Register} />\n            <AuthRoute path=\"/profile\" component={Profile} />\n            <AuthRoute path=\"/user/:userId\" component={OtherUser} />\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n          <Footer style={{ textAlign: 'center' }}>Luca Montaigut - 2020 | Made with ❤</Footer>\n        </Layout>\n      </Router >\n    </Layout>\n\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport \"antd/dist/antd.css\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trash.0eb3b1bc.svg\";"],"sourceRoot":""}