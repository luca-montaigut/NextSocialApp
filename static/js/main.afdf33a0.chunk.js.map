{"version":3,"sources":["assets/icons/trash.svg","redux/reducers/authReducer.js","redux/actions/actionTypes.js","redux/reducers/postsReducer.js","redux/RootReducer.js","redux/store.js","redux/actions/postsActions.js","pages/Home.jsx","pages/Login.jsx","redux/actions/authActions.js","components/Navbar.jsx","pages/Register.jsx","pages/Profile.jsx","pages/OtherUser.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","token","isAuthenticated","user","authReducer","state","action","type","Cookies","set","remove","posts","postsReducer","concat","newPost","map","post","id","editedPost","filter","toDeletePost","RootReducer","combineReducers","auth","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","editingPost","Home","useSelector","useState","msg","setMsg","msgEdit","setMsgEdit","edit","setEdit","dispatch","useDispatch","useEffect","length","fetch","then","response","ok","Error","statusText","json","loadPosts","username","placeholder","onChange","e","target","value","onClick","addPost","text","method","headers","body","JSON","stringify","catch","error","alert","sort","a","b","Date","created_at","key","src","Trash","alt","confirm","style","height","to","data","like","incrementLike","onFocus","autoFocus","editPost","Login","email","setEmail","password","setPassword","history","useHistory","push","required","identifier","jwt","loginSuccess","Navbar","Register","name","setName","registerSuccess","Profile","forEach","Math","floor","random","console","log","OtherUser","setUser","userPosts","setUserPosts","userId","useParams","description","App","get","loadUser","UnAuthRoute","Component","component","rest","render","props","pathname","AuthRoute","basename","process","path","exact","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.afdf33a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.0eb3b1bc.svg\";","import {\n  LOAD_USER,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from '../actions/actionTypes';\n\nimport Cookies from 'js-cookie'\n\nconst initialState = {\n  token: null,\n  isAuthenticated: null,\n  user: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_USER:\n      return {\n        ...state,\n        token: action.token,\n        isAuthenticated: true,\n        user: action.user,\n      }\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      Cookies.set('token', action.token)\n      return {\n        ...state,\n        ...action.token,\n        token: action.token,\n        isAuthenticated: true,\n        user: action.user,\n      }\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      Cookies.remove('token')\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default authReducer","export const LOAD_USER = \"LOAD_USER\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\n\nexport const LOAD_POSTS = \"LOAD_POST\";\nexport const NEW_POST = \"NEW_POST\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n","import { NEW_POST, LOAD_POSTS, DELETE_POST, EDIT_POST } from '../actions/actionTypes';\n\nconst initialState = {\n  posts: [],\n}\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return {\n        ...state,\n        posts: state.posts.concat(action.posts)\n      }\n    case NEW_POST:\n      return {\n        ...state,\n        posts: state.posts.concat(action.newPost)\n      }\n    case EDIT_POST:\n      return {\n        ...state,\n        posts: state.posts.map((post) => post.id === action.editedPost.id ? action.editedPost : post)\n      }\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post.id !== action.toDeletePost.id)\n      }\n    default:\n      return state\n  }\n}\n\nexport default postsReducer","\nimport { combineReducers } from 'redux';\nimport authReducer from './reducers/authReducer';\nimport postsReducer from './reducers/postsReducer';\n\nconst RootReducer = combineReducers({\n  auth: authReducer,\n  posts: postsReducer\n});\n\nexport default RootReducer","import { createStore } from \"redux\";\nimport reducer from \"./RootReducer\"\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store","import * as actionTypes from './actionTypes';\n\nexport const loadPosts = (posts) => {\n    return {\n        type: actionTypes.LOAD_POSTS,\n        posts: posts\n    }\n}\n\nexport const newPost = (post) => {\n    return {\n        type: actionTypes.NEW_POST,\n        newPost: post\n    }\n}\n\nexport const editingPost = (post) => {\n    return {\n        type: actionTypes.EDIT_POST,\n        editedPost: post\n    }\n}\n\nexport const destroyPost = (post) => {\n    return {\n        type: actionTypes.DELETE_POST,\n        toDeletePost: post\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { loadPosts, newPost, destroyPost, editingPost } from '../redux/actions/postsActions'\n\nimport Trash from '../assets/icons/trash.svg'\n\n\nconst Home = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const user = useSelector(state => state.auth.user);\n  const token = useSelector(state => state.auth.token);\n  const posts = useSelector(state => state.posts.posts);\n\n  const [msg, setMsg] = useState(\"\")\n  const [msgEdit, setMsgEdit] = useState(\"\")\n  const [edit, setEdit] = useState(\"\")\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const getPosts = () => {\n      fetch(\"https://api-minireseausocial.mathis-dyk.fr/posts\")\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(loadPosts(response))\n        })\n    }\n    if (posts.length === 0) {\n      getPosts()\n    }\n  }, [posts, dispatch])\n\n  const addPost = () => {\n    const addPost = {\n      text: msg,\n      user: user.id\n    }\n    fetch(\"https://api-minireseausocial.mathis-dyk.fr/posts\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(addPost)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(newPost(response))\n        setMsg('')\n      })\n      .catch((error) => {\n        alert(error)\n      })\n  }\n\n  const editPost = (post) => {\n    const data = {\n      text: msgEdit\n    }\n    fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(editingPost(response))\n        setEdit(\"\")\n      })\n      .catch((error) => {\n        alert(error)\n      })\n  }\n\n  const deletePost = (toDeletePost) => {\n    if (window.confirm(\"Le message va être supprimé\")) {\n      fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${toDeletePost.id}`, {\n        method: 'delete',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(destroyPost(response))\n        })\n        .catch((error) => {\n          alert(error)\n        })\n    }\n  }\n\n  const incrementLike = (post) => {\n    const data = {\n      like: post.like + 1\n    }\n    fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(editingPost(response))\n        setEdit(\"\")\n      })\n      .catch((error) => {\n        alert(error)\n      })\n  }\n\n  return (\n    <>\n      <h1>Welcome on My Social Network.</h1>\n      <p>This website is a training to Redux and React. We use auth and routing to create a small social media website.</p>\n      {isAuthenticated &&\n        <>\n          <h2>Hello {user.username}, what do you want to share with us today ?</h2>\n          <input type=\"text\" placeholder=\"your shitty message\" onChange={(e) => setMsg(e.target.value)} value={msg} />\n          <button onClick={addPost}>Add your post</button>\n        </>\n      }\n      <div>\n        <ul>\n          {posts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => {\n            if (!post.text || !post.user) {\n              return false\n            }\n            return (\n              <li key={post.id}>\n                {isAuthenticated && post.user.id === user.id && edit !== post.id &&\n                  <>\n                    <img src={Trash} alt=\"delete post\" onClick={() => deletePost(post)} style={{ height: \"1em\" }} />\n                    <button onClick={() => setEdit(post.id)}>Edit</button>\n                  </>\n                }\n                {isAuthenticated &&\n                  <Link to={`/user/${post.user.id}`}>\n                    <b>{post.user.username} : </b>\n                  </Link>\n                }\n                {edit !== post.id &&\n                  <>\n                    {post.text}\n                  </>\n                }\n                {isAuthenticated && edit !== post.id &&\n                  <span onClick={() => incrementLike(post)}> <b>|</b> {`❤ ${!post.like ? 0 : post.like}`} <b>|</b></span>\n                }\n                {edit === post.id &&\n                  <>\n                    <input value={msgEdit} onFocus={() => setMsgEdit(post.text)} autoFocus onChange={(e) => setMsgEdit(e.target.value)} />\n                    <button onClick={() => editPost(post)}>edit post</button>\n                    <button onClick={() => setEdit(\"\")}>cancel</button>\n                  </>\n                }\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { loginSuccess, loginFail } from '../redux/actions/authActions'\n\n\nconst Login = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(\"/\");\n    }\n  }, [isAuthenticated, history])\n\n  const login = () => {\n    const data = {\n      identifier: email,\n      password: password\n    }\n\n    fetch(\"https://api-minireseausocial.mathis-dyk.fr/auth/local/\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(loginSuccess(response))\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        dispatch(loginFail())\n        alert(error)\n      })\n  }\n\n  return (\n    <div>\n      {!isAuthenticated &&\n        <>\n          <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n          <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n          <button onClick={login}>Submit</button>\n        </>\n      }\n      {isAuthenticated &&\n        <>\n          <h1>connexion réussi !</h1>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Login;\n","import * as actionTypes from './actionTypes';\nimport Cookies from 'js-cookie'\n\nexport const registerSuccess = (response) => {\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        token: response.jwt,\n        user: response.user,\n    }\n}\n\nexport const registerFail = () => {\n    return {\n        type: actionTypes.REGISTER_FAIL,\n    }\n}\n\nexport const loadUser = (response) => {\n    return {\n        type: actionTypes.LOAD_USER,\n        user: response,\n        token: Cookies.get('token')\n    }\n}\n\nexport const loginSuccess = (response) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        token: response.jwt,\n        user: response.user,\n    }\n}\n\nexport const loginFail = () => {\n    return {\n        type: actionTypes.LOGIN_FAIL,\n    }\n}\n\nexport const logoutSuccess = () => {\n    return {\n        type: actionTypes.LOGOUT_SUCCESS,\n    }\n}","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { logoutSuccess } from '../redux/actions/authActions'\n\n\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const logout = () => {\n    dispatch(logoutSuccess())\n    history.push(\"/\");\n  }\n\n  return (\n    <>\n      <Link to=\"/\"> Home </Link>\n      {!isAuthenticated &&\n        <>\n          <Link to=\"/login\"> Login </Link>\n          <Link to=\"/register\"> Register </Link>\n        </>\n      }\n      {isAuthenticated &&\n        <>\n          <Link to=\"/profile\"> Profile </Link>\n          <button onClick={logout}>Se déconnecter</button>\n        </>}\n    </>\n  );\n};\n\nexport default Navbar;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { registerSuccess, registerFail } from '../redux/actions/authActions'\n\n\n\nconst Register = () => {\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  const history = useHistory();\n\n  const login = () => {\n    const data = {\n      username: name,\n      email: email,\n      password: password\n    }\n\n    fetch(\"https://api-minireseausocial.mathis-dyk.fr/auth/local/register\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(registerSuccess(response))\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        dispatch(registerFail())\n        alert(error)\n      })\n  }\n\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"username\" value={name} onChange={(e) => setName(e.target.value)} required />\n      <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n      <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n      <button onClick={login}>Submit</button>\n    </div>\n  )\n}\n\nexport default Register;\n","import React from 'react';\nimport { useSelector } from 'react-redux'\n\n\nconst Profile = () => {\n  const user = useSelector(state => state.auth.user);\n  const token = useSelector(state => state.auth.token);\n  const posts = useSelector(state => state.posts.posts);\n  const { id, username } = user\n\n  const likeForAll = () => {\n    posts.forEach(post => {\n      if (!post.like) {\n        const data = {\n          like: Math.floor(Math.random() * Math.floor(1000))\n        }\n        fetch(`https://api-minireseausocial.mathis-dyk.fr/posts/${post.id}`, {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(data)\n        })\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response\n          })\n          .then((response) => response.json())\n          .then((response) => {\n            console.log(response)\n          })\n          .catch((error) => {\n            alert(error)\n          })\n      }\n    });\n  }\n\n  return (\n    <>\n      <h1>Welcome on your profile.</h1>\n      <p>id : {id}</p>\n      <p>name : {username}</p>\n      <button onClick={likeForAll}>like for all</button>\n    </>\n  )\n}\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\n\nconst OtherUser = () => {\n    const token = useSelector(state => state.auth.token);\n    const [user, setUser] = useState({})\n    const [userPosts, setUserPosts] = useState([])\n\n    let { userId } = useParams()\n\n    useEffect(() => {\n        const fetchUser = () => {\n            fetch(`https://api-minireseausocial.mathis-dyk.fr/users/${userId}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n                .then((response) => {\n                    if (!response.ok) {\n                        throw Error(response.statusText);\n                    }\n                    return response\n                })\n                .then((response) => response.json())\n                .then((response) => {\n                    setUser(response)\n                })\n                .catch((error) => {\n                    alert(error)\n                })\n        }\n        const fetchUserPosts = () => {\n            fetch(`https://api-minireseausocial.mathis-dyk.fr/posts?user.id=${userId}`, {\n                method: 'get',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n                .then((response) => {\n                    if (!response.ok) {\n                        throw Error(response.statusText);\n                    }\n                    return response\n                })\n                .then((response) => response.json())\n                .then((response) => {\n                    setUserPosts(response)\n                })\n                .catch((error) => {\n                    alert(error)\n                })\n        }\n        fetchUser()\n        fetchUserPosts()\n    }, [token, userId])\n\n\n    return (\n        <>\n            <div>\n                <h1>Welcome on {user.username}'s profile.</h1>\n                <p>id : {user.id}</p>\n                <p>name : {user.username}</p>\n                <p>description : {user.description}</p>\n            </div>\n            <h2>Les messages postés par {user.username}</h2>\n            <ul>\n                {userPosts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => {\n                    if (!post.text || !post.user) {\n                        return false\n                    }\n                    return (\n                        <li key={post.id}>\n\n                            <b>{post.user.username} : </b>\n\n                            {post.text}\n                            <span onClick={() => console.log(\"like\")}> <b>|</b> {`❤ ${!post.like ? 0 : post.like}`} <b>|</b></span>\n                        </li>)\n                })}\n            </ul>\n        </>)\n}\n\nexport default OtherUser","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Cookies from 'js-cookie'\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Navbar from './components/Navbar';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport OtherUser from './pages/OtherUser';\n\nimport { loadUser } from './redux/actions/authActions'\n\nconst App = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (Cookies.get('token')) {\n      fetch(\"https://api-minireseausocial.mathis-dyk.fr/users/me\", {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('token')}`\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(loadUser(response))\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n  }, [dispatch])\n\n  const UnAuthRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n      isAuthenticated ? (\n        <Redirect to={{ pathname: '/' }} />\n      ) : (\n          <Component {...props} />\n        )\n    )} />\n  )\n\n  const AuthRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n          <Redirect to={{ pathname: '/login' }} />\n        )\n    )} />\n  )\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Switch>\n        <UnAuthRoute path=\"/login\" component={Login} />\n        <UnAuthRoute path=\"/register\" component={Register} />\n        <AuthRoute path=\"/profile\" component={Profile} />\n        <AuthRoute path=\"/user/:userId\" component={OtherUser} />\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}